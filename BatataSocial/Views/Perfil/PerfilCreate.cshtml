@model BatataSocial.Models.PerfilViewModel

@{
    ViewBag.Title = "PerfilCreate";
}
<script>
    var loadFile = function(event) {
    var output = document.getElementById('output');
    output.src = URL.createObjectURL(event.target.files[0]);
  };
</script>

<div class="col-xs-4">
    <div class="container col-md-offset-4" style="padding-top:80px">
        <img class="img-responsive" id="output" />
    </div>
</div>
<div class="col-xs-6 ">

        @using (Html.BeginForm("PerfilCreate", "Perfil", FormMethod.Post, new { @class = "form-horizontal form-signin", role = "form", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h3 class="form-signin-heading col-xs-10 col-md-offset-1">Criando seu Perfil</h3>

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label class="sr-only" for="Photo">Imagem</label>
                    <div class="col-xs-10 col-md-offset-1">
                        <input class="form-control" type="file" onchange="loadFile(event)" name="photo" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "sr-only" })
                    <div class="col-xs-10 col-md-offset-1">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Qual seu nome?" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "sr-only" })
                    <div class="col-xs-10 col-md-offset-1">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Qual seu sobrenome?" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "sr-only" })
                    <div class="col-xs-10 col-md-offset-1">
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Qual a sua data de nascimento?" } })
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StreetName, htmlAttributes: new { @class = "sr-only" })
                    <div class="col-xs-10 col-md-offset-1">
                        @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Qual o nome da rua que você mora?" } })
                        @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.neighborhood, htmlAttributes: new { @class = "sr-only" })
                    <div class="col-xs-10 col-md-offset-1">
                        @Html.EditorFor(model => model.neighborhood, new { htmlAttributes = new { @class = "form-control", @placeholder = "Qual seu bairro?" } })
                        @Html.ValidationMessageFor(model => model.neighborhood, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EstadoCivil, htmlAttributes: new { @class = "sr-only" })
                    <div class="col-xs-10 col-md-offset-1">
                        @Html.EditorFor(model => model.EstadoCivil, new { htmlAttributes = new { @class = "form-control", @placeholder = "Solteiro ou casado?" } })
                        @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.WorkPlace, htmlAttributes: new { @class = "sr-only" })
                    <div class="col-xs-10 col-md-offset-1">
                        @Html.EditorFor(model => model.WorkPlace, new { htmlAttributes = new { @class = "form-control", @placeholder = "Aonde você trabalha?" } })
                        @Html.ValidationMessageFor(model => model.WorkPlace, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.School, htmlAttributes: new { @class = "sr-only" })
                    <div class="col-xs-10 col-md-offset-1">
                        @Html.EditorFor(model => model.School, new { htmlAttributes = new { @class = "form-control", @placeholder = "Aonde você estudou ou estuda?" } })
                        @Html.ValidationMessageFor(model => model.School, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-xs-10 col-md-offset-1">
                        <input type="submit" value="Criar perfil" class="btn btn-success btn-block" />
                    </div>
                </div>
            </div>
        }
    </div>
